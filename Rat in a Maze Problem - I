

class Solution {
    public ArrayList<String> findPath(int[][] arr) {
        ArrayList<String> ans = new ArrayList<>();
        if(arr[0][0]==0){ans.add("-1"); return ans;}
        solve(arr, 0, 0, new StringBuilder(""), ans);
        if(ans.size()==0) ans.add("-1");
        return ans;
    }
    
    public void solve(int arr[][], int i, int j, StringBuilder sb, ArrayList<String> ans){
        if(i==arr.length-1 && j==arr.length-1){
            StringBuilder temp = new StringBuilder(sb);
            ans.add(temp.toString());
            return;
        }
        if(i>=arr.length || j>=arr.length) return;
        arr[i][j]=0;
        if(i+1<arr.length && arr[i+1][j]==1){sb.append('D'); solve(arr, i+1, j, sb, ans);sb.deleteCharAt(sb.length()-1);}
        if(j+1<arr.length && arr[i][j+1]==1){sb.append('R'); solve(arr, i, j+1, sb, ans);sb.deleteCharAt(sb.length()-1);}
        if(i-1>=0 && arr[i-1][j]==1){sb.append('U'); solve(arr, i-1, j, sb, ans);sb.deleteCharAt(sb.length()-1);}
        if(j-1>=0 && arr[i][j-1]==1){sb.append('L'); solve(arr, i, j-1, sb, ans);sb.deleteCharAt(sb.length()-1);}
        arr[i][j]=1;

    }
}
